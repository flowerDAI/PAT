#include <iostream>
#include <vector>
using namespace std;
int main(){
		
	int n, num;
	
	int A1 = 0;  // 计算能贝5整除 的 偶数 之和 
	int A2 = 0;
	double A4 = 0.0;  //
	int A5 = 0; // 最大值 
	
	cin >> n;
	
	vector<int> v[5];	
	
	for (int i = 0; i < n; i++) {		
		cin >> num;
		v[num % 5].push_back(num);  			 
    }
    
     
    for(int i=0; i< 5 ; i++) //输出二维动态数组 
    {   	
    	for(int j = 0; j < v[i].size(); j++){
    		
    		if(i == 0 && v[i][j] % 2 == 0) {
    			A1 += v[i][j];
			}
			
			if(i == 1 && j % 2 == 0){				
				A2 += v[i][j]; 								
			}
			
			if(i == 1 && j % 2 != 0){				
				A2 -= v[i][j]; 								
			}
			
			if(i == 3){
				A4 += v[i][j];
			}
    		
    		if (i == 4 && v[i][j] > A5){
    			A5 = v[i][j];
			}
				  				
		}   	
    }
    
    
    for(int i=0; i< 5 ; i++){
    	if(i != 0) printf(" ");
    	
//    	if(v[i].size() == 0){   // 这个条件是错误的，为什么错误呢？
//    		printf("N");
//    		continue;
//		}
		
		if (i == 0 && A1 == 0 || i != 0 && v[i].size() == 0) {
            printf("N"); continue;
        }
		
		
		if(i == 0){
			printf("%d", A1);
		}
		if(i == 1){
			printf("%d", A2);
		}
		if(i == 2){
			printf("%d",  v[2].size());
		}
		if(i == 3 ){
			printf("%0.1f", A4 / v[3].size());
		}
		if(i == 4){
			printf("%d",A5); 
		}
		
	}
    
    
    return 0;
} 


//==========================================================================================================

#include <iostream>
#include <vector>
using namespace std;
int main() {
    int n, num, A1 = 0, A2 = 0, A5 = 0;
    
    double A4 = 0.0;
    cin >> n;
    vector<int> v[5];
    for (int i = 0; i < n; i++) {
        cin >> num;
        v[num%5].push_back(num);
    }
    for (int i = 0; i < 5; i++) {
        for (int j = 0; j < v[i].size(); j++) {
        	
            if (i == 0 && v[i][j] % 2 == 0) A1 += v[i][j];
            
            if (i == 1 && j % 2 == 0) A2 += v[i][j];
            if (i == 1 && j % 2 == 1) A2 -= v[i][j];  // if (i == 1 && j % 2 != 0) A2 -= v[i][j];
            if (i == 3) A4 += v[i][j];
            if (i == 4 && v[i][j] > A5) A5 = v[i][j];
        }
    }
    for (int i = 0; i < 5; i++) {
        if (i != 0) printf(" ");
        if (i == 0 && A1 == 0 || i != 0 && v[i].size() == 0) {
            printf("N"); continue;
        }
        if (i == 0) printf("%d", A1);
        if (i == 1) printf("%d", A2);
        if (i == 2) printf("%d", v[2].size());
        if (i == 3) printf("%.1f", A4 / v[3].size());
        if (i == 4) printf("%d", A5);
    }
    return 0;
}


//==============================================================================================================
#include<iostream>
#include<iomanip>
using namespace std;
int main()
{
	int N,num[1000];
	cin>>N;
	for(int i=0;i<N;i++)
	cin>>num[i];
	int sumA1=0,sumA2=0,sumA4=0,cntA3=0,cntA4=0;//初始化为0并以是否为0为判定标准 
	bool A2=false;//注意由于sumA2可能为0，故以A2为判定标准 
	int sign=1,max=0; 
	for(int i=0;i<N;i++)
	{
		if(num[i]%5==0&&num[i]%2==0)//注意两个条件要同时成立 
		sumA1+=num[i];
		else if(num[i]%5==1)
		{
			A2=true;
			sumA2+=num[i]*sign;
			sign*=-1;
		}
		else if(num[i]%5==2)
		cntA3++;
		else if(num[i]%5==3)
		{
			sumA4+=num[i];
			cntA4++;
		}
		else if(num[i]%5==4)
		{
			if(max<num[i])
			max=num[i];
		}
	}
	if(sumA1)
	cout<<sumA1;
	else
	cout<<'N';
	if(A2)
	cout<<' '<<sumA2;
	else
	cout<<' '<<'N';
	if(cntA3)
	cout<<' '<<cntA3;
	else
	cout<<' '<<'N';
	if(cntA4)
	cout<<' '<<setiosflags(ios::fixed)<<setprecision(1)<<sumA4*1.0/cntA4;
	else
	cout<<' '<<'N';
	if(max)
	cout<<' '<<max;
	else
	cout<<' '<<'N';
	return 0;
}
