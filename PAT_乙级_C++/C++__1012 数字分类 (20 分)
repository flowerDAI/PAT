#include <iostream>
#include <vector>
using namespace std;
int main(){
		
	int n, num;
	
	int A1 = 0;  // 计算能贝5整除 的 偶数 之和 
	int A2 = 0;
	double A4 = 0.0;  //
	int A5 = 0; // 最大值 
	
	cin >> n;
	
	vector<int> v[5];	
	
	for (int i = 0; i < n; i++) {		
		cin >> num;
		v[num % 5].push_back(num);  			 
    }
    
     
    for(int i=0; i< 5 ; i++) //输出二维动态数组 
    {   	
    	for(int j = 0; j < v[i].size(); j++){
    		
    		if(i == 0 && v[i][j] % 2 == 0) {
    			A1 += v[i][j];
			}
			
			if(i == 1 && j % 2 == 0){				
				A2 += v[i][j]; 								
			}
			
			if(i == 1 && j % 2 != 0){				
				A2 -= v[i][j]; 								
			}
			
			if(i == 3){
				A4 += v[i][j];
			}
    		
    		if (i == 4 && v[i][j] > A5){
    			A5 = v[i][j];
			}
				  				
		}   	
    }
    
    
    for(int i=0; i< 5 ; i++){
    	if(i != 0) printf(" ");
    	
//    	if(v[i].size() == 0){   // 这个条件是错误的，为什么错误呢？
//    		printf("N");
//    		continue;
//		}
		
		if (i == 0 && A1 == 0 || i != 0 && v[i].size() == 0) {
            printf("N"); continue;
        }
		
		
		if(i == 0){
			printf("%d", A1);
		}
		if(i == 1){
			printf("%d", A2);
		}
		if(i == 2){
			printf("%d",  v[2].size());
		}
		if(i == 3 ){
			printf("%0.1f", A4 / v[3].size());
		}
		if(i == 4){
			printf("%d",A5); 
		}
		
	}
    
    
    return 0;
} 
